import { ApplyOptions } from '@sapphire/decorators';
import { Listener } from '@sapphire/framework';
import { Message, MessageEmbed, TextChannel, ThreadChannel } from 'discord.js';
import {
  AVEngine,
  AVEngineName,
  awaitFullResults,
  knownEngines,
  malwareScan,
} from '../utils/jotti';
import fetch from 'node-fetch';

@ApplyOptions<Listener.Options>({
  name: 'Malware Scanner',
  enabled: true,
  event: 'messageCreate',
})
export class MalwareListener extends Listener {
  async run(message: Message) {
    if (message.partial) await message.fetch();

    if (
      !((message.channel instanceof TextChannel ||
        message.channel instanceof ThreadChannel) &&
      message.channel.permissionsFor(message.guild.me).has('SEND_MESSAGES') &&
      message.channel.permissionsFor(message.guild.me).has('ADD_REACTIONS'))
    )
      return;

    const applications = message.attachments.filter((attachment) =>
      attachment.contentType.startsWith('application/')
    );

    if (applications.size == 0) return;
    const reaction = await message.react('ðŸ”ƒ');

    for (const [, attachment] of applications) {
      const applicationData = await fetch(attachment.url);
      const jobId = await malwareScan(
        await applicationData.buffer(),
        attachment.name
      );
      const jobProgress = await awaitFullResults(jobId);

      if (
        !Object.keys(jobProgress.filescanner).find(
          (engine: AVEngine) => jobProgress.filescanner[engine].malwarename
        )
      )
        continue;

      const embed = new MessageEmbed();
      embed.setTitle('Malware Scan');
      embed.setDescription(`Malware scan results for "${attachment.name}"...`);
      embed.setURL(`https://virusscan.jotti.org/en-US/filescanjob/${jobId}`);
      embed.setAuthor({
        name: 'Jotti',
        iconURL: 'https://virusscan.jotti.org/img/favicon.ico',
        url: 'https://virusscan.jotti.org/',
      });

      for (const engine of knownEngines) {
        if (!jobProgress.filescanner[engine].malwarename) continue;
        const result = jobProgress.filescanner[engine];
        embed.addField(`${AVEngineName[engine]}`, `${result.resulttext}`);
      }

      message.react('â€¼');
      message.reply({
        embeds: [embed],
      });
    }

    reaction.remove();
  }
}
